#ifndef Engine_Enum_h__
#define Engine_Enum_h__

namespace Engine
{
	// ID_DYNAMIC : 실시간 업데이트가 필요한 컴포넌트
	enum COMPONENTID { ID_DYNAMIC, ID_STATIC, ID_END };

	enum WINMODE { MODE_FULL, MODE_WIN };

	enum INFO { INFO_RIGHT, INFO_UP, INFO_LOOK, INFO_POS, INFO_END };
	enum ROTATION { ROT_X, ROT_Y, ROT_Z, ROT_END };

	enum RESOURCETYPE {	RESOURCE_STATIC, RESOURCE_LOGO, RESOURCE_STAGE, RESOURCE_END };

	enum BUFFERID { BUFFER_TRICOL, BUFFER_RCCOL, BUFFER_RCTEX, BUFFER_RCCOLTEX, BUFFER_TERRAINTEX, BUFFER_CUBETEX, 
		BUFFER_LINECOL, BUFFER_SCREEN, BUFFER_TRAIL, BUFFER_CIRCLETEX, BUFFER_CIRCULAR_TRAIL, BUFFER_PARTICLE_TEX, 
		BUFFER_CYLINDERTEX, BUFFER_END };
	enum TEXTURETYPE { TEX_NORMAL, TEX_CUBE, TEX_END };
	
	enum RENDERID { RENDER_PRIORITY, RENDER_NONALPHA, RENDER_DISTORTION, RENDER_EFFECT, RENDER_ALPHA, RENDER_UI, RENDER_MOUSE, RENDER_END };
	
	enum COLLTYPE { COL_FALSE, COL_TRUE, COL_END };
	enum MESHTYPE { TYPE_STATIC, TYPE_DYNAMIC, TYPE_NAVI };

	enum MOUSEKEYSTATE { DIM_LB, DIM_RB, DIM_MB, DIM_END };

	enum MOUSEMOVESTATE { DIMS_X, DIMS_Y, DIMS_Z, DIMS_END };

	enum CAMERAID { CAM_STATIC, CAM_DYNAMIC, CAM_END };

	enum COLLIDERTYPE { CT_LINE, CT_PLANE, CT_SPHERE, CT_CUBE, CT_MULTI, CT_END };
	enum COLLIDERCOLOR { CC_RED, CC_GREEN, CC_BLUE, CC_PURPLE, CC_YELLOW, CC_END };
	enum COLLISIONTYPE { COLL_ENTER, COLL_STAY, COLL_LEAVE, COLL_AWAY, COLL_END };
	enum COLL_FUNC_DATA_TYPE { CD_ATTACK, CD_POS, CD_GAME_OBJECT, CD_STATIC_OBJECT, CD_DYNAMIC_OBJECT, CD_MONSTER, CD_CHARACTER, CD_WAR, CD_STRIFE };

	enum MESH_TEXTURE_TYPE { MTT_DIFFUSE, MTT_NORMAL, MTT_MRE, MTT_END };
}

#endif // Engine_Enum_h__
